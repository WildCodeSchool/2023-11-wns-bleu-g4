name: e2e-tests

on:
  pull_request:
  workflow_call:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Install dependencies for e2e-tests
      - name: Install dependencies for e2e-tests
        run: npm ci
        working-directory: ./e2e-tests

      # Install backend dependencies
      - name: Install backend dependencies
        run: npm ci
        working-directory: ../backend

      # Install frontend dependencies
      - name: Install frontend dependencies
        run: npm ci
        working-directory: ../frontend

      # Store Playwright's Version
      - name: Store Playwright's Version
        run: |
          PLAYWRIGHT_VERSION=$(npm ls @playwright/test | grep @playwright | sed 's/.*@//')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      # Setup Playwright if not cached
      - name: Setup Playwright
        run: npx playwright install --with-deps

      # Start backend app using environment variables from secrets
      - name: Start backend app
        run: |
          npm run app:start & sleep 120
        working-directory: ../backend
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
          CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}

      # Run Playwright tests with the same environment variables
      - name: Run Playwright tests
        run: npm run test
        working-directory: ./e2e-tests
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
          CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}

      # Store artifacts from failed tests
      - name: Store Artifacts from Failed Tests
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: e2e-tests/test-results/
          retention-days: 7